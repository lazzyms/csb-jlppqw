{"version":3,"sources":["App.js","index.js"],"names":["App","className","QueryGet","query","search","useLocation","useMemo","URLSearchParams","useQuery","Helmet","get","property","content","rootElement","document","getElementById","createRoot","render"],"mappings":"gNAWe,SAASA,IACtB,OACE,cAAC,IAAD,UACE,qBAAKC,UAAU,MAAf,SACE,cAACC,EAAD,QAMR,SAASA,IACP,IAAMC,EAjBR,WACE,IAAQC,EAAWC,cAAXD,OAER,OAAOE,mBAAQ,kBAAM,IAAIC,gBAAgBH,KAAS,CAACA,IAcrCI,GACd,OACE,qCACE,eAACC,EAAA,EAAD,WACE,gDA+BuB,UAAtBN,EAAMO,IAAI,SACT,qCACE,sBAAMC,SAAS,WAAWC,QAAST,EAAMO,IAAI,UAC7C,sBAAMC,SAAS,sBAAsBC,QAAST,EAAMO,IAAI,UACxD,sBAAMC,SAAS,gBAAgBC,QAAQ,qBAI7C,wCAAWT,EAAMO,IAAI,WACrB,wCAAWP,EAAMO,IAAI,cC7D3B,IAAMG,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACjB,EAAD,S","file":"static/js/main.8535980c.chunk.js","sourcesContent":["import { Helmet } from \"react-helmet\";\nimport \"./styles.css\";\nimport { BrowserRouter as Router, useLocation } from \"react-router-dom\";\nimport { useMemo } from \"react\";\n\nfunction useQuery() {\n  const { search } = useLocation();\n\n  return useMemo(() => new URLSearchParams(search), [search]);\n}\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <QueryGet />\n      </div>\n    </Router>\n  );\n}\n\nfunction QueryGet() {\n  const query = useQuery();\n  return (\n    <>\n      <Helmet>\n        <title>Hello Arre!</title>\n        {/* <meta name=\"title\" content=\"Tag set by Fallback URL\" />\n        <meta name=\"description\" content=\"Tag set by Fallback URL\" />\n        <meta property=\"og:title\" content=\"Tag set by Fallback URL\" />\n        <meta property=\"og:description\" content=\"Tag set by Fallback URL\" />\n        <meta\n          property=\"og:video\"\n          content=\"http://www.youtube.com/v/CsGYh8AacgY?version=3\"\n        />\n        <meta\n          property=\"og:video:url\"\n          content=\"http://www.youtube.com/v/CsGYh8AacgY?version=3\"\n        />\n        <meta property=\"og:video:width\" content=\"400\" />\n        <meta property=\"og:video:height\" content=\"300\" />\n        <meta\n          property=\"og:video:type\"\n          content=\"application/x-shockwave-flash\"\n        />\n        <meta property=\"og:type\" content=\"video\" />\n\n        <meta name=\"twitter:card\" content=\"player\" />\n        <meta name=\"twitter:title\" content=\"Tag set by Fallback URL\" />\n\n        <meta\n          name=\"twitter:player\"\n          content=\"http://www.youtube.com/v/CsGYh8AacgY?version=3\"\n        />\n        <meta name=\"twitter:site\" content=\"@lazzy_ms\" />\n        <meta name=\"twitter:image\" content=\"https://picsum.photos/200\" />\n        <meta name=\"og:image\" content=\"https://picsum.photos/200\" /> */}\n        {query.get(\"type\") === \"audio\" && (\n          <>\n            <meta property=\"og:audio\" content={query.get(\"link\")} />\n            <meta property=\"og:audio:secure_url\" content={query.get(\"link\")} />\n            <meta property=\"og:audio:type\" content=\"audio/mpeg\" />\n          </>\n        )}\n      </Helmet>\n      <h1>link: {query.get(\"link\")}</h1>\n      <h1>type: {query.get(\"type\")}</h1>\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}